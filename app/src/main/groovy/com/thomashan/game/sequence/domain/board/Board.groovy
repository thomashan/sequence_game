package com.thomashan.game.sequence.domain.board

import com.thomashan.game.sequence.domain.card.Card

import static BoardCell.of
import static com.thomashan.game.sequence.domain.card.CardNumber.*
import static com.thomashan.game.sequence.domain.card.Suite.*

record Board(List<List<BoardCell>> boardCells) {
    static Board standard() {
        return new Board([
            [
                of(0, 0, Optional.empty()),
                of(1, 0, Optional.of(Card.of(SIX, DIAMOND))),
                of(2, 0, Optional.of(Card.of(SEVEN, DIAMOND))),
                of(3, 0, Optional.of(Card.of(EIGHT, DIAMOND))),
                of(4, 0, Optional.of(Card.of(NINE, DIAMOND))),
                of(5, 0, Optional.of(Card.of(TEN, DIAMOND))),
                of(6, 0, Optional.of(Card.of(QUEEN, DIAMOND))),
                of(7, 0, Optional.of(Card.of(KING, DIAMOND))),
                of(8, 0, Optional.of(Card.of(ACE, DIAMOND))),
                of(9, 0, Optional.empty()),
            ],
            [
                of(0, 1, Optional.of(Card.of(FIVE, DIAMOND))),
                of(1, 1, Optional.of(Card.of(THREE, HEART))),
                of(2, 1, Optional.of(Card.of(TWO, HEART))),
                of(3, 1, Optional.of(Card.of(TWO, SPADE))),
                of(4, 1, Optional.of(Card.of(THREE, SPADE))),
                of(5, 1, Optional.of(Card.of(FOUR, SPADE))),
                of(6, 1, Optional.of(Card.of(FIVE, SPADE))),
                of(7, 1, Optional.of(Card.of(SIX, SPADE))),
                of(8, 1, Optional.of(Card.of(SEVEN, SPADE))),
                of(9, 1, Optional.of(Card.of(ACE, CLUB))),
            ],
            [
                of(0, 2, Optional.of(Card.of(FOUR, DIAMOND))),
                of(1, 2, Optional.of(Card.of(FOUR, HEART))),
                of(2, 2, Optional.of(Card.of(KING, DIAMOND))),
                of(3, 2, Optional.of(Card.of(ACE, DIAMOND))),
                of(4, 2, Optional.of(Card.of(ACE, CLUB))),
                of(5, 2, Optional.of(Card.of(KING, CLUB))),
                of(6, 2, Optional.of(Card.of(QUEEN, CLUB))),
                of(7, 2, Optional.of(Card.of(TEN, CLUB))),
                of(8, 2, Optional.of(Card.of(EIGHT, SPADE))),
                of(9, 2, Optional.of(Card.of(KING, CLUB))),
            ],
            [
                of(0, 3, Optional.of(Card.of(THREE, DIAMOND))),
                of(1, 3, Optional.of(Card.of(FIVE, HEART))),
                of(2, 3, Optional.of(Card.of(QUEEN, DIAMOND))),
                of(3, 3, Optional.of(Card.of(QUEEN, HEART))),
                of(4, 3, Optional.of(Card.of(TEN, HEART))),
                of(5, 3, Optional.of(Card.of(NINE, HEART))),
                of(6, 3, Optional.of(Card.of(EIGHT, HEART))),
                of(7, 3, Optional.of(Card.of(NINE, CLUB))),
                of(8, 3, Optional.of(Card.of(NINE, SPADE))),
                of(9, 3, Optional.of(Card.of(QUEEN, CLUB))),
            ],
            [
                of(0, 4, Optional.of(Card.of(TWO, DIAMOND))),
                of(1, 4, Optional.of(Card.of(SIX, HEART))),
                of(2, 4, Optional.of(Card.of(TEN, DIAMOND))),
                of(3, 4, Optional.of(Card.of(KING, HEART))),
                of(4, 4, Optional.of(Card.of(THREE, HEART))),
                of(5, 4, Optional.of(Card.of(TWO, HEART))),
                of(6, 4, Optional.of(Card.of(SEVEN, HEART))),
                of(7, 4, Optional.of(Card.of(EIGHT, CLUB))),
                of(8, 4, Optional.of(Card.of(TEN, SPADE))),
                of(9, 4, Optional.of(Card.of(TEN, CLUB))),
            ],
            [
                of(0, 5, Optional.of(Card.of(ACE, SPADE))),
                of(1, 5, Optional.of(Card.of(SEVEN, HEART))),
                of(2, 5, Optional.of(Card.of(NINE, DIAMOND))),
                of(3, 5, Optional.of(Card.of(ACE, HEART))),
                of(4, 5, Optional.of(Card.of(FOUR, HEART))),
                of(5, 5, Optional.of(Card.of(FIVE, HEART))),
                of(6, 5, Optional.of(Card.of(SIX, HEART))),
                of(7, 5, Optional.of(Card.of(SEVEN, CLUB))),
                of(8, 5, Optional.of(Card.of(QUEEN, SPADE))),
                of(9, 5, Optional.of(Card.of(NINE, CLUB))),
            ],
            [
                of(0, 6, Optional.of(Card.of(KING, SPADE))),
                of(1, 6, Optional.of(Card.of(EIGHT, HEART))),
                of(2, 6, Optional.of(Card.of(EIGHT, DIAMOND))),
                of(3, 6, Optional.of(Card.of(TWO, CLUB))),
                of(4, 6, Optional.of(Card.of(THREE, CLUB))),
                of(5, 6, Optional.of(Card.of(FOUR, CLUB))),
                of(6, 6, Optional.of(Card.of(FIVE, CLUB))),
                of(7, 6, Optional.of(Card.of(SIX, CLUB))),
                of(8, 6, Optional.of(Card.of(KING, SPADE))),
                of(9, 6, Optional.of(Card.of(EIGHT, CLUB))),
            ],
            [
                of(0, 7, Optional.of(Card.of(QUEEN, SPADE))),
                of(1, 7, Optional.of(Card.of(NINE, HEART))),
                of(2, 7, Optional.of(Card.of(SEVEN, DIAMOND))),
                of(3, 7, Optional.of(Card.of(SIX, DIAMOND))),
                of(4, 7, Optional.of(Card.of(FIVE, DIAMOND))),
                of(5, 7, Optional.of(Card.of(FOUR, DIAMOND))),
                of(6, 7, Optional.of(Card.of(THREE, DIAMOND))),
                of(7, 7, Optional.of(Card.of(TWO, DIAMOND))),
                of(8, 7, Optional.of(Card.of(ACE, SPADE))),
                of(9, 7, Optional.of(Card.of(SEVEN, CLUB))),
            ],
            [
                of(0, 8, Optional.of(Card.of(TEN, SPADE))),
                of(1, 8, Optional.of(Card.of(TEN, HEART))),
                of(2, 8, Optional.of(Card.of(QUEEN, HEART))),
                of(3, 8, Optional.of(Card.of(KING, HEART))),
                of(4, 8, Optional.of(Card.of(ACE, HEART))),
                of(5, 8, Optional.of(Card.of(TWO, CLUB))),
                of(6, 8, Optional.of(Card.of(THREE, CLUB))),
                of(7, 8, Optional.of(Card.of(FOUR, CLUB))),
                of(8, 8, Optional.of(Card.of(FIVE, CLUB))),
                of(9, 8, Optional.of(Card.of(SIX, CLUB))),
            ],
            [
                of(0, 9, Optional.empty()),
                of(1, 9, Optional.of(Card.of(NINE, SPADE))),
                of(2, 9, Optional.of(Card.of(EIGHT, SPADE))),
                of(3, 9, Optional.of(Card.of(SEVEN, SPADE))),
                of(4, 9, Optional.of(Card.of(SIX, SPADE))),
                of(5, 9, Optional.of(Card.of(FIVE, SPADE))),
                of(6, 9, Optional.of(Card.of(FOUR, SPADE))),
                of(7, 9, Optional.of(Card.of(THREE, SPADE))),
                of(8, 9, Optional.of(Card.of(TWO, SPADE))),
                of(9, 9, Optional.empty()),
            ]
        ])
    }
}
